{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAY,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,OACjD,EAAe,SAAS,aAAa,CAAC,MAE5C,SAAS,EAAwB,CAAc,EAG7C,OAAO,SAFe,EAAe,OAAO,CAAC,QAAS,IAAI,IAAI,GAE/B,GACjC,CAWA,IAAM,EARG,AAQoB,EARf,IAAI,CAAC,SAAC,CAAA,CAAO,CAAzB,EACE,IAAM,EAAU,EAAwB,EAAM,OAAO,CAAC,MAAM,EAG5D,OAAO,AAFS,EAAwB,EAAM,OAAO,CAAC,MAAM,EAE3C,CACnB,GAKF,AAAA,EAAa,MAAM,CAAnB,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAuB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,KAGd,AAYI,EAZC,GAAG,CAAC,SAAC,CAAjB,EACE,IAAkC,EAAA,EAAK,OAAO,CAAtC,EAA0B,EAA1B,QAAA,CAAU,EAAgB,EAAhB,MAAA,CAAQ,EAAQ,EAAR,GAA1B,CAEA,MAAO,CACL,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAA,EACA,OAAA,EACA,IAAA,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar _employeeList;\nvar listItems = Array.from(document.querySelectorAll(\"li\"));\nvar employeeList = document.querySelector(\"ul\");\nfunction convertCurrencyToNumber(currencyString) {\n    var numericString = currencyString.replace(/[$,]/g, \"\").trim();\n    return parseInt(numericString, 10);\n}\nfunction sortList(list) {\n    return list.sort(function(itemA, itemB) {\n        var salaryA = convertCurrencyToNumber(itemA.dataset.salary);\n        var salaryB = convertCurrencyToNumber(itemB.dataset.salary);\n        return salaryB - salaryA;\n    });\n}\nvar sortedItems = sortList(listItems);\n(_employeeList = employeeList).append.apply(_employeeList, _to_consumable_array(sortedItems));\nfunction getEmployees(list) {\n    return list.map(function(item) {\n        var _item_dataset = item.dataset, position = _item_dataset.position, salary = _item_dataset.salary, age = _item_dataset.age;\n        return {\n            name: item.textContent.trim(),\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n}\ngetEmployees(sortedItems);\n\n//# sourceMappingURL=index.f6a69c85.js.map\n","'use strict';\n\nconst listItems = Array.from(document.querySelectorAll('li'));\nconst employeeList = document.querySelector('ul');\n\nfunction convertCurrencyToNumber(currencyString) {\n  const numericString = currencyString.replace(/[$,]/g, '').trim();\n\n  return parseInt(numericString, 10);\n}\n\nfunction sortList(list) {\n  return list.sort((itemA, itemB) => {\n    const salaryA = convertCurrencyToNumber(itemA.dataset.salary);\n    const salaryB = convertCurrencyToNumber(itemB.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n}\n\nconst sortedItems = sortList(listItems);\n\nemployeeList.append(...sortedItems);\n\nfunction getEmployees(list) {\n  return list.map((item) => {\n    const { position, salary, age } = item.dataset;\n\n    return {\n      name: item.textContent.trim(),\n      position,\n      salary,\n      age,\n    };\n  });\n}\n\ngetEmployees(sortedItems);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","listItems","from","document","querySelectorAll","employeeList","querySelector","convertCurrencyToNumber","currencyString","parseInt","replace","trim","sortedItems","list","sort","itemA","itemB","salaryA","dataset","salary","salaryB","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","item","_item_dataset","position","age","textContent"],"version":3,"file":"index.f6a69c85.js.map"}